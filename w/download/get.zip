##############################
## get.zip
##
## compress and return the actual configuration
##
###########################################################################
# This code is part of wITIP (a web basex Information Theoretic Prover)
#
# Copyright (2017) Laszlo Csirmaz, Central European University, Budapest
# This program is free, open-source software. You may redistribute it
# and/or modify under the terms of the GNU General Public License (GPL).
# There is ABSOLUTELY NO WARRANTY, use at your own risk.
###########################################################################

use wSession;
use wAnApache;
use wHtml;
use wUtils;
use strict;

sub notfound {
    my($session,$file)=@_;
    my $basehtml=$session->getconf("basehtml");
    print "Status: 404 Not Found\n";
    print "Content-type: text/html\n\n";

    print <<NOTFOUND;

<html>
<head><title>404: Not Found</title></head>
<body>
<h1>Not Found</h1>
<p>The file your requested ($file) is not available.
Use the <a href="$basehtml">wITIP starting page</a> to
work with wITIP.</p>
</body>
</html>

NOTFOUND
    exit wAnApache::NOT_FOUND;
}


my $session = new wSession;
exit (0) unless { defined $session };

my $arg=$session->getpar("what");
# $arg cannot contain %, maybe it's doubly encoded
$arg =~ s/%([a-fA-F0-9][a-fA-F0-9])/pack("C",hex($1))/eg;
# <SSID>_Jan07_9876.zip
if( $arg !~ m#^(.+)_[A-Z][a-z][a-z]\d\d_[A-Z0-9]{4}\.zip# ){
    notfound($session,$arg);
}
my $SSID=$1;
if($session->add_SSID($SSID)){ # not a correct SSID
    notfound($session,$arg);
}
#my $zipname=wUtils::purify($arg);
#my $tmpstub=$session->getconf("tmpdir")."/".wUtils::purify($SSID);

use wZip;
my $filename=wZip::create($session);

my $fh;
open($fh,">","/tmp/tobezipped.txt");
print $fh "SSID=$SSID\n";
print $fh "arg=$arg\n";
print $fh "lot of other stuff\n";
for my $i(1..100){ print $fh "number $i\n"; }
close($fh);
## chdir to /tmp; the file name is saved in the zip file
## make the name to be the date and the user name
## (as specified by "arg")
##
## system("/usr/bin/zip","-q","-j","/tmp/x.zip","/tmp/tobezipped.txt");

print "Content-Type: application/zip\n";
print "Pragma: no-cache\n";
print "Cache-Control: no-cache\n";
print "Content-Disposition: attachement; filename=\"$arg\"\n";
print "\n";

open($fh,"-|","/usr/bin/zip -qq -j - $filename");
my ($rlen,$buff);
do{
    $rlen=sysread($fh,$buff,4096);
    if($rlen){ print $buff; }
} while(defined $rlen && $rlen>0);
close($fh);

exit wAnApache::OK;

wHtml::plain_header($session,"wITIP download",{});

print "<p> This is the argument:",wUtils::htmlescape($arg),
    "</p>\n";

wHtml::html_tail();

return wAnApache::OK;


